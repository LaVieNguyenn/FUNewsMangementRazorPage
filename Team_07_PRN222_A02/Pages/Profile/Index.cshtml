@page
@model Team_07_PRN222_A02.Pages.Profile.IndexModel
@{
    ViewData["Title"] = "My Profile";
}

<h2 class="text-center">My Profile</h2>

@if (Model.Profile != null)
{
    <div class="card shadow-lg p-4 mb-5 bg-white rounded">
        <div class="card-body">
            <h4 class="card-title" id="displayAccountName">@Model.Profile.AccountName</h4>
            <p class="card-text">
                <strong>Email:</strong> @Model.Profile.AccountEmail <br />
                <strong>Role:</strong> @(Model.Profile.AccountRole == 1 ? "Staff" : "Other") <br />
            </p>

            <button class="btn btn-primary" onclick="openEditProfileModal('@Model.Profile.AccountName', '@Model.Profile.AccountEmail')">
                ✏ Edit Profile
            </button>
            <button class="btn btn-info" data-bs-toggle="modal" data-bs-target="#newsHistoryModal" onclick="loadNewsHistory()">
                📜 View News History
            </button>
        </div>
    </div>
}
else
{
    <p class="text-danger">⚠ Profile not found.</p>
}

<!-- Modal Edit Profile -->
<div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editProfileForm" method="post" asp-page-handler="SaveProfile">
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input type="text" id="editAccountName" name="AccountName" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" id="editAccountEmail" name="AccountEmail" class="form-control" readonly />
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-success">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- Modal View News History -->
<div class="modal fade" id="newsDetailModal" tabindex="-1" aria-labelledby="newsDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newsTitle">News Title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p><strong>Published:</strong> <span id="newsCreatedDate"></span></p>
                <div id="newsContent"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Load Bootstrap & jQuery -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

<!-- JavaScript -->
<script>
    function openEditProfileModal(accountName, accountEmail) {
        document.getElementById('editAccountName').value = accountName;
        document.getElementById('editAccountEmail').value = accountEmail;

        var modalElement = document.getElementById('editProfileModal');
        if (modalElement) {
            var editModal = new bootstrap.Modal(modalElement);
            editModal.show();
        }
    }

    // Bắt sự kiện submit của form cập nhật profile
    document.getElementById("editProfileForm")?.addEventListener("submit", async function (event) {
        event.preventDefault();

        const formData = new FormData(this);
        const tokenElement = document.querySelector("input[name='__RequestVerificationToken']");
        if (tokenElement) {
            formData.append("__RequestVerificationToken", tokenElement.value);
        }

        try {
            const response = await fetch("?handler=SaveProfile", {
                method: "POST",
                body: formData
            });

            const result = await response.json();
            if (!response.ok) throw new Error(result.error || "Server response was not OK");

            alert("✅ Profile updated successfully!");
            bootstrap.Modal.getInstance(document.getElementById("editProfileModal"))?.hide();
            document.getElementById("displayAccountName").textContent = formData.get("AccountName");
        } catch (error) {
            console.error("❌ Error:", error);
            alert("⚠ Update failed: " + error.message);
        }
    });

        async function loadNewsHistory() {
        try {
            const response = await fetch('/Profile/Index?handler=LoadNewsHistory');
            if (!response.ok) throw new Error("⚠ Failed to load news history");

            const data = await response.json();
            let tableBody = document.getElementById("newsHistoryTable");

            tableBody.innerHTML = data.length
                ? data.map(news => `
                    <tr>
                        <td>${news.newsTitle}</td>
                        <td>${news.createdDate}</td>
                        <td><button class="btn btn-primary" onclick="openNewsDetail(${news.newsArticleId})">📖 View</button></td>
                    </tr>
                `).join("")
                : `<tr><td colspan="3" class="text-center">No news found.</td></tr>`;
        } catch (error) {
            console.error("❌ Error:", error);
            document.getElementById("newsHistoryTable").innerHTML = `<tr><td colspan="3" class="text-center">Error loading news.</td></tr>`;
        }
    }


        async function openNewsDetail(newsId) {
        try {
            const response = await fetch(`/Profile/Index?handler=LoadNewsDetail&newsId=${newsId}`);
            if (!response.ok) throw new Error("⚠ Failed to load news details");

            const data = await response.json();
            if (!data.success) throw new Error(data.error);

            document.getElementById("newsTitle").textContent = data.title;
            document.getElementById("newsCreatedDate").textContent = data.createdDate;
            document.getElementById("newsContent").innerHTML = data.content;
            new bootstrap.Modal(document.getElementById("newsDetailModal")).show();
        } catch (error) {
            console.error("❌ Error:", error);
            alert("⚠ " + error.message);
        }
    }

</script>
