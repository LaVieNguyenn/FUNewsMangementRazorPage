@page
@model Team_07_PRN222_A02.Pages.Profile.IndexModel
@{
    ViewData["Title"] = "My Profile";
}

<h2 class="text-center">My Profile</h2>

@if (Model.Profile != null)
{
    <div class="card shadow-lg p-4 mb-5 bg-white rounded">
        <div class="card-body">
            <h4 class="card-title">@Model.Profile.AccountName</h4>
            <p class="card-text">
                <strong>Email:</strong> @Model.Profile.AccountEmail <br />
                <strong>Role:</strong> @(Model.Profile.AccountRole == 1 ? "Staff" : "Other") <br />
            </p>

            <button class="btn btn-primary" onclick="openEditModal('@Model.Profile.AccountName', '@Model.Profile.AccountEmail')">
                ✏ Edit Profile
            </button>
            <button class="btn btn-info" id="openNewsHistoryModal">📜 View News History</button>
        </div>
    </div>
}
else
{
    <p class="text-danger">⚠ Profile not found.</p>
}

<!-- Modal Edit Profile -->
<div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Profile</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editProfileForm">
                    <div class="mb-3">
                        <label class="form-label">Name</label>
                        <input type="text" id="editAccountName" name="AccountName" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Email</label>
                        <input type="email" id="editAccountEmail" name="AccountEmail" class="form-control" readonly />
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-success">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Toast Notification -->
<div id="toast-container" style="position: fixed; top: 20px; right: 20px; z-index: 1050;"></div>

<script>
    function openEditModal(accountName, accountEmail) {
        document.getElementById('editAccountName').value = accountName;
        document.getElementById('editAccountEmail').value = accountEmail;

        var editModal = new bootstrap.Modal(document.getElementById('editProfileModal'));
        editModal.show();
    }

    document.getElementById("editProfileForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const formData = new FormData(this);
        try {
            const response = await fetch("/Profile/Index?handler=SaveProfile", {
                method: "POST",
                body: formData
            });

            const result = await response.json();
            if (result.success) {
                showToast("✅ Profile updated successfully!", "success");
                new bootstrap.Modal(document.getElementById("editProfileModal")).hide();
                setTimeout(() => location.reload(), 1500);
            } else {
                showToast("⚠ Update failed: " + result.error, "error");
            }
        } catch (error) {
            console.error("❌ Error:", error);
            showToast("⚠ Server error.", "error");
        }
    });

    function showToast(message, type = 'success') {
        let toast = document.createElement('div');
        toast.classList.add('toast', `toast-${type}`);
        toast.innerHTML = `${message}`;
        document.getElementById('toast-container').appendChild(toast);
        setTimeout(() => toast.remove(), 3000);
    }
</script>